type Query {
    getBottle(id: String!): Bottle
    listBottles(filter: BottleFilterInput, limit: Int, nextToken: String): Bottles
}

type Mutation {
    createBottle(input: CreateBottleInput!): Bottle
    updateBottle(input: UpdateBottleInput!): Bottle
    deleteBottle(input: DeleteBottleInput!): Bottle
}

type Bottle {
    id: String!
    name: String!
    imageUrl: String
    dateOpened: String
    dateAcquired: String
}

type Bottles {
    items: [Bottle]
    nextToken: String
}

input BottleFilterInput {
    id: TableStringFilterInput
    name: TableStringFilterInput
    imageUrl: TableStringFilterInput
    dateOpened: TableStringFilterInput
    dateAcquired: TableStringFilterInput
}

input CreateBottleInput {
    id: String!
    name: String!
    imageUrl: String
    dateOpened: String
    dateAcquired: String
}

input UpdateBottleInput {
    id: ID!
    name: String
    imageUrl: String
    dateOpened: String
    dateAcquired: String
}

input DeleteBottleInput {
    id: ID!
}

input TableStringFilterInput {
    ne: String
    eq: String
    le: String
    lt: String
    ge: String
    gt: String
    contains: String
    notContains: String
    between: [String]
    beginsWith: String
}

input TableBooleanFilterInput {
    ne: Boolean
    eq: Boolean
}

input TableIntFilterInput {
    ne: Int
    eq: Int
    le: Int
    lt: Int
    ge: Int
    gt: Int
    contains: Int
    notContains: Int
    between: [Int]
}
